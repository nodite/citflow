{
  "components": {
    "schemas": {
      "AgentDto": {
        "properties": {},
        "type": "object"
      },
      "AssignAgentToTenantDto": {
        "properties": {},
        "type": "object"
      },
      "AssignRoleToAgentDto": {
        "properties": {},
        "type": "object"
      },
      "CreateAgentDto": {
        "properties": {},
        "type": "object"
      },
      "CreateRoleDto": {
        "properties": {},
        "type": "object"
      },
      "CreateTenantDto": {
        "properties": {},
        "type": "object"
      },
      "CreateTenantMetadataDto": {
        "properties": {},
        "type": "object"
      },
      "FindValidAgentsDto": {
        "properties": {
          "agentIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": ["agentIds"],
        "type": "object"
      },
      "FindValidRolesDto": {
        "properties": {
          "roleIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": ["roleIds"],
        "type": "object"
      },
      "PaginatedResponseDto": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          }
        },
        "required": ["meta"],
        "type": "object"
      },
      "PaginationMeta": {
        "properties": {
          "currentPage": {
            "type": "number"
          },
          "itemCount": {
            "type": "number"
          },
          "itemsPerPage": {
            "type": "number"
          },
          "totalItems": {
            "type": "number"
          },
          "totalPages": {
            "type": "number"
          }
        },
        "required": ["totalItems", "itemCount", "itemsPerPage", "totalPages", "currentPage"],
        "type": "object"
      },
      "RoleDto": {
        "properties": {},
        "type": "object"
      },
      "TenantDto": {
        "properties": {},
        "type": "object"
      },
      "TenantMetadataDto": {
        "properties": {},
        "type": "object"
      },
      "UnassignAgentFromTenantDto": {
        "properties": {},
        "type": "object"
      },
      "UnassignRoleFromAgentDto": {
        "properties": {},
        "type": "object"
      },
      "UpdateAgentDto": {
        "properties": {},
        "type": "object"
      },
      "UpdateRoleDto": {
        "properties": {},
        "type": "object"
      },
      "UpdateTenantDto": {
        "properties": {},
        "type": "object"
      },
      "UpdateTenantMetadataDto": {
        "properties": {},
        "type": "object"
      }
    },
    "securitySchemes": {
      "BearerToken": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      }
    }
  },
  "info": {
    "contact": {},
    "description": "This is the API for the Global Settings service",
    "title": "Global Settings API",
    "version": "v1.3.4"
  },
  "openapi": "3.0.0",
  "paths": {
    "/global-settings/v1/agent": {
      "get": {
        "operationId": "find-agents",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "example": 10
            }
          },
          {
            "description": "Search like name, displayName or description",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Agents retrieved successfully"
          }
        },
        "summary": "Find agents",
        "tags": ["agent"]
      },
      "post": {
        "operationId": "CreateAgentController_create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAgentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["agent"]
      }
    },
    "/global-settings/v1/agent/name/{name}": {
      "get": {
        "operationId": "find-agent-by-name",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agent retrieved successfully"
          },
          "404": {
            "description": "Agent not found"
          }
        },
        "summary": "Find agent by name",
        "tags": ["agent"]
      }
    },
    "/global-settings/v1/agent/role/assign": {
      "post": {
        "operationId": "AssignRoleToAgentController_assign",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleToAgentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["agent"]
      }
    },
    "/global-settings/v1/agent/role/unassign": {
      "delete": {
        "operationId": "UnassignRoleFromAgentController_unassign",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnassignRoleFromAgentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["agent"]
      }
    },
    "/global-settings/v1/agent/validate": {
      "post": {
        "operationId": "find-valid-agents",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindValidAgentsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Agents retrieved successfully"
          }
        },
        "summary": "Find valid agents",
        "tags": ["agent"]
      }
    },
    "/global-settings/v1/agent/{id}": {
      "delete": {
        "operationId": "RemoveAgentController_remove",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["agent"]
      },
      "get": {
        "operationId": "find-agent-by-id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agent retrieved successfully"
          },
          "404": {
            "description": "Agent not found"
          }
        },
        "summary": "Find agent by id",
        "tags": ["agent"]
      },
      "patch": {
        "operationId": "UpdateAgentController_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAgentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["agent"]
      }
    },
    "/global-settings/v1/health": {
      "get": {
        "operationId": "simple-health-check",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Health check that return only status OK",
        "tags": ["health"]
      }
    },
    "/global-settings/v1/healthz": {
      "get": {
        "operationId": "full-health-check",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "additionalProperties": {
                        "additionalProperties": true,
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": ["status"],
                        "type": "object"
                      },
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "type": "object"
                    },
                    "error": {
                      "additionalProperties": {
                        "additionalProperties": true,
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": ["status"],
                        "type": "object"
                      },
                      "example": {},
                      "nullable": true,
                      "type": "object"
                    },
                    "info": {
                      "additionalProperties": {
                        "additionalProperties": true,
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": ["status"],
                        "type": "object"
                      },
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "nullable": true,
                      "type": "object"
                    },
                    "status": {
                      "example": "ok",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The Health Check is successful"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "additionalProperties": {
                        "additionalProperties": true,
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": ["status"],
                        "type": "object"
                      },
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "message": "Could not connect",
                          "status": "down"
                        }
                      },
                      "type": "object"
                    },
                    "error": {
                      "additionalProperties": {
                        "additionalProperties": true,
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": ["status"],
                        "type": "object"
                      },
                      "example": {
                        "redis": {
                          "message": "Could not connect",
                          "status": "down"
                        }
                      },
                      "nullable": true,
                      "type": "object"
                    },
                    "info": {
                      "additionalProperties": {
                        "additionalProperties": true,
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": ["status"],
                        "type": "object"
                      },
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "nullable": true,
                      "type": "object"
                    },
                    "status": {
                      "example": "error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The Health Check is not successful"
          }
        },
        "summary": "Health check that verify database connectivity and env vars",
        "tags": ["health"]
      }
    },
    "/global-settings/v1/role": {
      "get": {
        "operationId": "find-roles",
        "parameters": [
          {
            "in": "query",
            "name": "system",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "example": 10
            }
          },
          {
            "description": "Search like name or displayName",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Roles retrieved successfully"
          }
        },
        "summary": "Find roles",
        "tags": ["role"]
      },
      "post": {
        "operationId": "CreateRoleController_create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["role"]
      }
    },
    "/global-settings/v1/role/name/{name}": {
      "get": {
        "operationId": "find-role-by-name",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role retrieved successfully"
          },
          "404": {
            "description": "Role not found"
          }
        },
        "summary": "Find role by name",
        "tags": ["role"]
      }
    },
    "/global-settings/v1/role/validate": {
      "post": {
        "operationId": "find-valid-roles",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindValidRolesDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Roles retrieved successfully"
          }
        },
        "summary": "Find valid roles",
        "tags": ["role"]
      }
    },
    "/global-settings/v1/role/{id}": {
      "delete": {
        "operationId": "RemoveRoleController_remove",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["role"]
      },
      "get": {
        "operationId": "find-role-by-id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role retrieved successfully"
          },
          "404": {
            "description": "Role not found"
          }
        },
        "summary": "Find role by id",
        "tags": ["role"]
      },
      "patch": {
        "operationId": "UpdateRoleController_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["role"]
      }
    },
    "/global-settings/v1/tenant": {
      "get": {
        "operationId": "find-tenants",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "example": 10
            }
          },
          {
            "description": "Search like name or displayName",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Tenants retrieved successfully"
          }
        },
        "summary": "Find tenants",
        "tags": ["tenant"]
      },
      "patch": {
        "operationId": "UpdateTenantController_update",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["tenant"]
      },
      "post": {
        "operationId": "CreateTenantController_create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["tenant"]
      }
    },
    "/global-settings/v1/tenant-metadata": {
      "get": {
        "operationId": "find-tenant-metadata",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "example": 10,
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "autoOnboardingEnabled",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "autoOnboardingAllowedDomains",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant-metadata retrieved successfully"
          }
        },
        "summary": "Find tenant-metadata",
        "tags": ["tenant-metadata"]
      },
      "patch": {
        "operationId": "UpdateTenantMetadataController_update",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantMetadataDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["tenant-metadata"]
      },
      "post": {
        "operationId": "CreateTenantMetadataController_create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantMetadataDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["tenant-metadata"]
      }
    },
    "/global-settings/v1/tenant-metadata/{id}": {
      "delete": {
        "operationId": "RemoveTenantMetadataController_remove",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["tenant-metadata"]
      },
      "get": {
        "operationId": "find-tenant-metadata-by-id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant-metadata retrieved successfully"
          },
          "404": {
            "description": "Tenant-metadata not found"
          }
        },
        "summary": "Find tenant-metadata by id",
        "tags": ["tenant-metadata"]
      }
    },
    "/global-settings/v1/tenant/agent/assign": {
      "post": {
        "operationId": "AssignAgentToTenantController_assign",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignAgentToTenantDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["tenant"]
      }
    },
    "/global-settings/v1/tenant/agent/unassign": {
      "delete": {
        "operationId": "UnassignAgentFromTenantController_unassign",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnassignAgentFromTenantDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["tenant"]
      }
    },
    "/global-settings/v1/tenant/name/{name}": {
      "get": {
        "operationId": "find-tenant-by-name",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Projects separated by spaces (e.g., \"agents agents.roles metadata\")",
            "in": "query",
            "name": "project",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant retrieved successfully"
          },
          "404": {
            "description": "Tenant not found"
          }
        },
        "summary": "Find tenant by name",
        "tags": ["tenant"]
      }
    },
    "/global-settings/v1/tenant/{id}": {
      "delete": {
        "operationId": "RemoveTenantController_remove",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["tenant"]
      },
      "get": {
        "operationId": "find-tenant-by-id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Projects separated by spaces (e.g., \"agents agents.roles metadata\")",
            "in": "query",
            "name": "project",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant retrieved successfully"
          },
          "404": {
            "description": "Tenant not found"
          }
        },
        "summary": "Find tenant by id",
        "tags": ["tenant"]
      }
    },
    "/global-settings/v1/term": {
      "get": {
        "operationId": "find-terms",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Terms retrieved successfully"
          }
        },
        "summary": "Find terms",
        "tags": ["term"]
      }
    },
    "/global-settings/v1/term/versions": {
      "get": {
        "operationId": "find-term-versions-by-tenant",
        "parameters": [
          {
            "in": "query",
            "name": "tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lastVersion",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "onlyTenantTerm",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Term versions retrieved successfully"
          }
        },
        "summary": "Find term versions by tenant",
        "tags": ["term"]
      }
    },
    "/global-settings/v1/term/{id}": {
      "get": {
        "operationId": "find-term-by-id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Term retrieved successfully"
          },
          "404": {
            "description": "Term not found"
          }
        },
        "summary": "Find term by id",
        "tags": ["term"]
      }
    },
    "/global-settings/v1/term/{id}/content": {
      "get": {
        "operationId": "find-term-content-by-id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lang",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Term content retrieved successfully"
          },
          "404": {
            "description": "Term content not found"
          }
        },
        "summary": "Find term content by id",
        "tags": ["term"]
      }
    }
  },
  "security": [
    {
      "BearerToken": []
    }
  ],
  "servers": [],
  "tags": []
}
